services:
  elasticsearch:
    image: docker.elastic.co/elasticsearch/elasticsearch:8.9.0
    environment:
      - ES_JAVA_OPTS=-Xms1024m -Xmx1024m
      - discovery.type=single-node
      - xpack.security.enabled=false
      - cluster.routing.allocation.disk.watermark.enable_for_single_data_node=true
    volumes:
      - elasticsearch:/usr/share/elasticsearch/data
    deploy:
      placement:
        constraints: [node.hostname == bacchus-w]
  
  # kibana:
  #   image: docker.elastic.co/kibana/kibana:8.9.0
  #   depends_on:
  #     - elasticsearch
  #   env_file:
  #     - config/config.env
  #   deploy:
  #     placement:
  #       constraints: [node.hostname == bacchus-w]
  #     labels:
  #       caddy: canids-kibana.staging.fyelabs.com
  #       caddy.route.1_reverse_proxy: "{{upstreams 5601}}"

  backend:
    image: 192.0.2.1:5000/canids-v2-staging-backend:latest
    build:
      context: .
      dockerfile: backend/Dockerfile
    environment:
      - ELASTIC_HOST=elasticsearch
      - ELASTIC_PORT=9200
    depends_on:
      - elasticsearch
    deploy:
      placement:
        constraints: [node.hostname == bacchus-w]
      labels:
        caddy: canids-khaos.staging.fyelabs.com
        caddy.reverse_proxy: "@backend {{upstreams 6060}}"
        caddy.reverse_proxy.health_uri: /status
        caddy.reverse_proxy.health_interval: 10s
  
  ingestion:
    image: 192.0.2.1:5000/canids-v2-staging-ingestion:latest
    build:
      context: .
      dockerfile: ingestion/Dockerfile
    environment:
      - flags=--verbose
      - hostname=backend:50000
    volumes: 
      - /opt/zeek/logs/current:/logs
      - ingestiondb:/db
    deploy: #TODO: Replicate this globally once all servers are configured with zeek
      #mode: global
      placement:
        constraints: [node.hostname == bacchus-w]

volumes:
  elasticsearch:
  ingestiondb: